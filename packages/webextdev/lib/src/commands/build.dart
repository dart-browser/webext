import 'dart:convert';
import 'dart:io';

import 'package:args/command_runner.dart';
import 'package:webext/manifest.dart';

import '../third_party/webdev.dart' as webdev;
import '../webextdev.dart';

class BuildCommand extends Command {
  @override
  final name = "build";
  @override
  final description = "Builds a browser extension";
  @override
  final takesArguments = false;

  BuildCommand() {
    argParser.addFlag("messy",
        help:
            "Does not delete '/packages' or other files generated by 'webdev'");
  }

  Future<void> run() async {
    await validateManifest("web/manifest.json");

    if (File("pubspec.lock").existsSync() == false) {
      await commandLine("pub", ["get"]);
    }

    await webdev.main(["build"]);

    // Delete
    if (!argResults["messy"]) {
      final directory = Directory("build/packages");
      print("Deleting '${directory.path}'");
      await directory.delete(recursive: true);
    }
  }

  /// Validates the manifest file
  static Future<void> validateManifest(String path) async {
    print("Validating manifest in '$path'");

    final manifestJson = json.decode(File(path).readAsStringSync());
    final manifest = Manifest()..fromJson(manifestJson);
    manifest.validate();
  }
}
